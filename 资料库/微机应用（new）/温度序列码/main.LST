C51 COMPILER V9.59.0.0   MAIN                                                              12/07/2024 22:38:40 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "tou.h"
   2          #include "intrins.h"
   3          #include "onewire.h"
   4          sbit rsLCD=P2^0;
   5          sbit wrLCD=P2^1;
   6          sbit enLCD=P1^2;
   7          sbit S7=P3^0;
   8          sbit S6=P3^1;
   9          sbit S5=P3^2;
  10          sbit S4=P3^3;
  11          unsigned char min = 15;
  12          unsigned char max = 30;
  13          unsigned int Temp;
  14          unsigned char du1[16];
  15          unsigned char display[16];
  16          unsigned char date[8];
  17          unsigned char disflag = 0;
  18          
  19          void delaynms(unsigned int ms)
  20          {
  21   1         unsigned int x,y;
  22   1         for(x=ms;x;x--)
  23   1         for(y=110;y;y--);    
  24   1      }
  25          
  26          void comLCD(unsigned char com) 
  27          {
  28   1         enLCD=0;
  29   1         rsLCD=0;
  30   1         wrLCD=0; 
  31   1         P0=com;
  32   1         delaynms(1);
  33   1         enLCD=1;
  34   1         delaynms(1);
  35   1         enLCD=0;
  36   1      }
  37          void datLCD(unsigned char dat)
  38          {
  39   1         enLCD = 0;
  40   1         rsLCD=1;
  41   1         wrLCD=0;
  42   1         P0=dat;
  43   1         delaynms(1);
  44   1         enLCD=1;
  45   1         delaynms(1);
  46   1         enLCD=0;
  47   1      }
  48          void initLCD()
  49          {
  50   1         comLCD(0x38);
  51   1         delaynms(10);
  52   1         comLCD(0x06); 
  53   1         delaynms(10);
  54   1         comLCD(0x0c);
  55   1         delaynms(10);
C51 COMPILER V9.59.0.0   MAIN                                                              12/07/2024 22:38:40 PAGE 2   

  56   1         comLCD(0x01); 
  57   1         delaynms(10);
  58   1         comLCD(0x02+0x80); 
  59   1      }
  60          void Delay10ms()                //@11.0592MHz
  61          {
  62   1              unsigned char i, j;
  63   1      
  64   1              i = 108;
  65   1              j = 145;
  66   1              do
  67   1              {
  68   2                      while (--j);
  69   2              } 
  70   1              while (--i);
  71   1      }
  72          
  73          void Delay5ms()         //@11.0592MHz
  74          {
  75   1              unsigned char i, j;
  76   1      
  77   1              i = 54;
  78   1              j = 199;
  79   1              do
  80   1              {
  81   2                      while (--j);
  82   2              } while (--i);
  83   1      }
  84          
  85          
  86          
  87          void LCD_ASCII(char rom) //取ASCII码
  88          {
  89   1              unsigned char a,b;
  90   1              a = rom & 0x0f;  //取低四位
  91   1              b = rom & 0xf0;  //取高四位
  92   1              b >>= 4;
  93   1              if((b >= 0x00)&&(b <= 0x09))
  94   1              {
  95   2                      datLCD(b + 0x30);
  96   2              }
  97   1              else
  98   1              {
  99   2                      datLCD(b + 0x37);
 100   2              }
 101   1              if((a >= 0x00)&&(a <= 0x09))
 102   1              {
 103   2                      datLCD(a + 0x30);
 104   2              }
 105   1              else
 106   1              {
 107   2                      datLCD(a + 0x37);
 108   2              }
 109   1      }
 110          
 111          void get_number() //将读取序列号写入数组
 112          {
 113   1              unsigned char i;
 114   1              init_ds18b20(); //初始化
 115   1              Write_DS18B20(0x33);
 116   1              for(i = 0;i < 8; i++)
 117   1              {
C51 COMPILER V9.59.0.0   MAIN                                                              12/07/2024 22:38:40 PAGE 3   

 118   2                      date[i] = Read_DS18B20();
 119   2              }       
 120   1              }
 121          void display2() //LCD第二行显示
 122          {
 123   1              if(disflag==0)
 124   1              {
 125   2                      get_number();
 126   2                      LCD_ASCII(date[7]);
 127   2                      LCD_ASCII(date[6]);
 128   2                      LCD_ASCII(date[5]);
 129   2                      LCD_ASCII(date[4]);
 130   2                      LCD_ASCII(date[3]);
 131   2                      LCD_ASCII(date[2]);
 132   2                      LCD_ASCII(date[1]);
 133   2                      LCD_ASCII(date[0]);
 134   2              }
 135   1      }
 136          void display1() //LCD第一行显示
 137          {
 138   1      
 139   1      if(disflag==0)
 140   1      {
 141   2              du1[0] = 'N';
 142   2              du1[1] = 'U';
 143   2              du1[2] = 'M';
 144   2              du1[3] = 'B';
 145   2              du1[4] = 'E';
 146   2              du1[5] = 'R';
 147   2              du1[6] = ':';
 148   2              du1[7] = ' ';
 149   2              du1[8] = ' ';
 150   2              du1[9] = ' ';
 151   2              du1[10] =' ';
 152   2              du1[11] =' ';
 153   2              du1[12] =' ';
 154   2              du1[13] =' ';
 155   2              du1[14] =' ';
 156   2              du1[15] =' ';
 157   2      }       
 158   1      }
 159          unsigned char aa[13];
 160          unsigned char i;
 161          unsigned char mm[15];
 162          bit flag=0;
 163          bit flag1=0;
 164          void main()
 165          {
 166   1      float temper;
 167   1      unsigned int temp;
 168   1      P2=((P2&0x1f)|0x80);
 169   1              P0=0xff;
 170   1              P2&=0x1f;
 171   1              P2=((P2&0x1f)|0xc0);
 172   1              P0&=0x00;
 173   1              P2&=0x1f;
 174   1         initLCD();
 175   1         delaynms(10);
 176   1          while(1)
 177   1         {   
 178   2                       if(S7==0)
 179   2                               {
C51 COMPILER V9.59.0.0   MAIN                                                              12/07/2024 22:38:40 PAGE 4   

 180   3                              delaynms(10);
 181   3                              if(S7==0)
 182   3                              {
 183   4                                      comLCD(0x01);
 184   4                              flag1=~flag1;
 185   4                                      while(S7==0);
 186   4                              }
 187   3                      }
 188   2                               if(flag1==0)
 189   2                                       {
 190   3          temper= read_temperature();
 191   3                       temp=temper*100;
 192   3      
 193   3      
 194   3        aa[0]='T';
 195   3        aa[1]='e';
 196   3        aa[2]='m';
 197   3        aa[3]='p';
 198   3        aa[4]=':';
 199   3        aa[5]= temp/1000+'0';
 200   3        aa[6]= temp%1000/100+'0';
 201   3        aa[7]=0x2E;
 202   3        aa[8]=temp%100/10+'0';
 203   3        aa[9]=temp%10+'0';
 204   3        aa[10]=temp/1000+'0';                                  
 205   3        aa[11]=0xdf;
 206   3        aa[12]='C';
 207   3              if(temper>=max)
 208   3              {
 209   4                      P2=((P2&0x1f)|0xa0);
 210   4                      P0=0x40;
 211   4                      P2&=0x1f;
 212   4                      P2=((P2&0x1f)|0x80);
 213   4              P0=0xfb;
 214   4              P2&=0x1f;
 215   4                      delaynms(500);
 216   4                      P2=((P2&0x1f)|0x80);
 217   4              P0=0xff;
 218   4              P2&=0x1f;
 219   4                      delaynms(500);
 220   4              }
 221   3              else if(temper<=min)
 222   3              {
 223   4                      P2=((P2&0x1f)|0xa0);
 224   4                      P0=0xaf;
 225   4                      P2&=0x1f;
 226   4                      P2=((P2&0x1f)|0x80);
 227   4              P0=0xfe;
 228   4              P2&=0x1f;
 229   4              }
 230   3      
 231   3               else
 232   3              {
 233   4                      P2=((P2&0x1f)|0xa0);
 234   4                      P0=0x10;
 235   4                      P2&=0x1f;
 236   4                      P2=((P2&0x1f)|0x80);
 237   4              P0=0xfd;
 238   4              P2&=0x1f;
 239   4              }
 240   3        
 241   3                       comLCD(0x82);
C51 COMPILER V9.59.0.0   MAIN                                                              12/07/2024 22:38:40 PAGE 5   

 242   3            for(i=0;i<12;i++)
 243   3           {
 244   4            datLCD(aa[i]);
 245   4           delaynms(10);
 246   4               
 247   4           }
 248   3               if(S6==0)
 249   3                      {
 250   4                              delaynms(10);
 251   4                              if(S6==0)
 252   4                                      flag=~flag;
 253   4                              
 254   4                                      while(S6==0);
 255   4                      }
 256   3                      if(S5==0)
 257   3                      {
 258   4                              delaynms(10);
 259   4                      if(S5==0)
 260   4                      {
 261   5                              if(flag==1)
 262   5                              max=max+1;
 263   5                              else 
 264   5                                      min=min+1;
 265   5                                      while(S5==0);
 266   5                      }
 267   4              }
 268   3                      if(S4==0)
 269   3                      {
 270   4                              delaynms(10);
 271   4                              if(S4==0)
 272   4                              {
 273   5                                      if(flag==1)
 274   5                                      max=max-1;
 275   5                                      else
 276   5                                      min=min-1;
 277   5                                      
 278   5                                      if(max <= min)
 279   5                                              max=min;
 280   5                                              
 281   5                                      while(S4==0);
 282   5                              }
 283   4                      }
 284   3                       comLCD(0x80+0x40);
 285   3                      mm[0]='H';
 286   3                      mm[1]=':';
 287   3                      mm[2]=max/10+'0';
 288   3                      mm[3]=max%10+'0';
 289   3                      mm[4]=0xdf;
 290   3                      mm[5]='C';
 291   3                      mm[6]=' ';
 292   3                      mm[7]=' ';
 293   3                      mm[8]='L';
 294   3                      mm[9]=':';
 295   3                      mm[10]=min/10+'0';
 296   3                      mm[11]=min%10+'0';
 297   3                      mm[12]=0xdf;
 298   3              mm[13]='C';
 299   3            for(i=0;i<14;i++)
 300   3                      {
 301   4            datLCD(mm[i]);
 302   4           delaynms(10);
 303   4                       }
C51 COMPILER V9.59.0.0   MAIN                                                              12/07/2024 22:38:40 PAGE 6   

 304   3               }
 305   2                                       if(flag1==1)
 306   2                                       {
 307   3                                               unsigned char i,j;
 308   3                      display1();
 309   3                      comLCD(0x80); //显示第一行
 310   3              for(i = 0;i < 16;i++)
 311   3                      datLCD(du1[i]);
 312   3      
 313   3                      comLCD(0x40 + 0x80); //显示第二行
 314   3                      display2();
 315   3                      for(j = 0;j < 16;j++)
 316   3                      datLCD(display[j]);
 317   3                                        }
 318   2       }
 319   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1006    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     74       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
